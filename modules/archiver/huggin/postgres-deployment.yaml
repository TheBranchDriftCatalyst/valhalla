apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yml
    kompose.version: 1.28.0 (HEAD)
  creationTimestamp: null
  labels:
    io.kompose.service: postgres
  name: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: postgres
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml
        kompose.version: 1.28.0 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.network/archiver-default: "true"
        io.kompose.service: postgres
    spec:
      containers:
        - env:
            - name: HUGINN_DATABASE_NAME
              valueFrom:
                configMapKeyRef:
                  key: HUGINN_DATABASE_NAME
                  name: postgres-env
            - name: HUGINN_DATABASE_PASSWORD
              valueFrom:
                configMapKeyRef:
                  key: HUGINN_DATABASE_PASSWORD
                  name: postgres-env
            - name: HUGINN_DATABASE_USERNAME
              valueFrom:
                configMapKeyRef:
                  key: HUGINN_DATABASE_USERNAME
                  name: postgres-env
            - name: POSTGRES_PASSWORD
              valueFrom:
                configMapKeyRef:
                  key: POSTGRES_PASSWORD
                  name: postgres-env
            - name: POSTGRES_PORT_5432_TCP_ADDR
              valueFrom:
                configMapKeyRef:
                  key: POSTGRES_PORT_5432_TCP_ADDR
                  name: postgres-env
            - name: POSTGRES_USER
              valueFrom:
                configMapKeyRef:
                  key: POSTGRES_USER
                  name: postgres-env
          image: postgres:9.5
          name: postgres
          resources: {}
          ports:
            - containerPort: 5432
      restartPolicy: Always
status: {}
